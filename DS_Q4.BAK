 #include<iostream.h>
 #include<conio.h>
 #include<process.h>
 class linkedlist
	{
  struct Node
 {
 int data;
 Node *prev,*nxt;
 };
 Node *tail;
 public:
 linkedlist()
 {
 tail=NULL;
 }
 void create();
 void insertend();
 void insertbeg();
 void insertloc();
 void delbeg();
 void delend();
 void delloc();
 void reverse();
 void search();
 void display();
 };
 void linkedlist::create()
 {
 Node *temp=new Node();
 cout<<"Enter the value of Data\n";
 cin>>temp->data;
 temp->nxt=temp->prev=NULL;
 if(tail==NULL)
 {
 temp->nxt=temp;
 tail=temp;
 }
 temp->prev=tail->nxt;
 tail->nxt=temp;
 temp->nxt=temp->prev;
 temp->prev=tail;
 tail=temp;
 tail->nxt->prev=tail;
 }

 void linkedlist::insertbeg()
{
	Node *temp=new Node();
	cout<<"\nenter the value in the data\n";
	cin>>temp->data;
	if(tail==NULL)
	{
	cout<<"Empty\n";
	}
	temp->nxt=tail->nxt;
	tail->nxt=temp;
	temp->prev=tail;
}
void linkedlist::insertend()
{
 Node *temp=new Node();
 cout<<"Enter the value of Data\n";
 cin>>temp->data;
 temp->nxt=temp->prev=NULL;
 if(tail==NULL)
 {
 temp->nxt=temp;
 tail=temp;
 }
 temp->prev=tail->nxt;
 tail->nxt=temp;
 temp->nxt=temp->prev;
 temp->prev=tail;
 tail=temp;
 tail->nxt->prev=tail;
 }
  void linkedlist::delbeg()
 {
	Node *temp=new Node();
	if(tail==NULL)
	{
	cout<<"Empty\n";
	}
	temp=tail->nxt;
	temp->nxt->prev=tail;
	tail->nxt=temp->nxt;
	delete temp;
}
  void linkedlist::delend()
  {
	Node *temp=new Node();
	if(tail==NULL)
	{
	cout<<"Empty\n";
	}
	temp=tail;
	tail->nxt->prev=tail->prev;
	tail->prev->nxt=tail->nxt;
	tail=tail->prev;
	delete temp;
  }
void linkedlist::insertloc()
{
if(tail==NULL)
{
cout<<"\nempty\n";
}
int n1;
cout<<"\nEnter the location for insertion\n";
cin>>n1;
if(n1==1)
{
insertbeg();
}
Node *temp=new Node();
temp=tail->nxt;
for(int i=0;i<n1-2;i++)
temp=temp->nxt;
if(temp==tail)
{
insertend();
}
Node *temp1=new Node();
cout<<"Enter the data \n";
cin>>temp1->data;
temp1->prev=temp;
temp1->nxt=temp->nxt;
temp->nxt=temp1;
if(temp==tail)
{
tail=temp1;
}
}

 void linkedlist::delloc()
 {
	if(tail==NULL)
	{
	cout<<"\nempty\n";
	}
	int n1;
	cout<<"\nEnter the location for deletion\n";
	cin>>n1;
	if(n1==1)
	{
	delbeg();
	}
	Node *temp=new Node();
	temp=tail->nxt;
	for(int i=0;i<n1-2;i++)
	temp=temp->nxt;
	 if(temp==tail)
	{
	delend();
	}
	Node *temp1=new Node();
	temp1=temp->nxt;
	temp1->nxt->prev=temp;
	temp->nxt=temp1->nxt;
	delete temp1;
 }
 void linkedlist::search()
 {
	int ele;
	cout<<"\nenter the data to be searched\n";
	cin>>ele;
	Node *temp=new Node();
	temp=tail->nxt;
	 int flag=0;
	do
	{
	 if(temp->data==ele)
	 {
	 flag++;
	}
	temp=temp->nxt;
	}while(temp!=tail->nxt);
	if(flag!=0)
	{
	cout<<"\nELEMENT FOUND\n";
	cout<<"\n No of times element is found: "<<flag<<endl;
	}
	else
	{
	cout<<"\nNot found\n";
	 }
 }


 void linkedlist::display()
 {
	if(tail==NULL)
	{
	cout<<"\nempty\n";
	}
	Node *temp=new Node();
	temp=tail->nxt;
	cout<<"\nLIST DISPLAYED\n";
	 do
	 {
	 cout<<temp->data<<"\t";
	 temp=temp->nxt;
	}while(temp!=tail->nxt) ;
	cout<<endl;
  }
  void main()
    {
	clrscr();
	int ch;
	linkedlist l1;
	do
    {
 cout<<"\nENTER YOUR CHOICE: \n1.to create \n2.to Display\n";
 cout<<"3.to insert the Data in beginning\n4.to insert the data in the end\n";
 cout<<"5.to delete the first element\n6.to delete the element in the end\n";
 cout<<"7.to enter the data at the specific loction\n8.to delete the data at the specific location\n";
 cout<<"9.to search for a data\n10.to Exit\n";
 cin>>ch;
 switch(ch)
      {
	case 1:
	l1.create();
	break;
	case 2:
	l1.display();
	break;
	case 3:
	l1.insertbeg();
	break;
	case 4:
	l1.insertend();
	break;
	case 5:
	l1.delbeg();
	break;
	case 6:
	l1.delend();
	break;
	case 7:
	l1.insertloc();
	break;
	case 8:
	l1.delloc();
	break;
	case 9:
	l1.search();
	break;
	case 10:
	exit(0);
	break;
      }
 }while(ch!=0);
	getch();
 }



